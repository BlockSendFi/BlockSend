{
  "contractName": "IERC20Permit",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n",
  "sourcePath": "/Users/fabricepayet/Workspace/blocksend/blocksend/truffle/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
  "ast": {
    "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "exportedSymbols": {
      "IERC20Permit": [
<<<<<<< HEAD
        2699
      ]
    },
    "id": 2700,
=======
        2785
      ]
    },
    "id": 2786,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 2665,
=======
        "id": 2751,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "114:23:14"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20Permit",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
<<<<<<< HEAD
          "id": 2666,
=======
          "id": 2752,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
          "nodeType": "StructuredDocumentation",
          "src": "139:480:14",
          "text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
        },
        "fullyImplemented": false,
<<<<<<< HEAD
        "id": 2699,
        "linearizedBaseContracts": [
          2699
=======
        "id": 2785,
        "linearizedBaseContracts": [
          2785
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
        ],
        "name": "IERC20Permit",
        "nameLocation": "630:12:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
<<<<<<< HEAD
              "id": 2667,
=======
              "id": 2753,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "StructuredDocumentation",
              "src": "649:792:14",
              "text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
            },
            "functionSelector": "d505accf",
<<<<<<< HEAD
            "id": 2684,
=======
            "id": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "1455:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2682,
=======
              "id": 2768,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2669,
=======
                  "id": 2755,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1479:5:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2684,
=======
                  "scope": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1471:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2668,
=======
                    "id": 2754,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2671,
=======
                  "id": 2757,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1502:7:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2684,
=======
                  "scope": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1494:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2670,
=======
                    "id": 2756,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2673,
=======
                  "id": 2759,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1527:5:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2684,
=======
                  "scope": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1519:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2672,
=======
                    "id": 2758,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2675,
=======
                  "id": 2761,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1550:8:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2684,
=======
                  "scope": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1542:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2674,
=======
                    "id": 2760,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2677,
=======
                  "id": 2763,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1574:1:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2684,
=======
                  "scope": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1568:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2676,
=======
                    "id": 2762,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2679,
=======
                  "id": 2765,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1593:1:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2684,
=======
                  "scope": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1585:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2678,
=======
                    "id": 2764,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2681,
=======
                  "id": 2767,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1612:1:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2684,
=======
                  "scope": 2770,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1604:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2680,
=======
                    "id": 2766,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1461:158:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 2683,
=======
              "id": 2769,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1628:0:14"
            },
<<<<<<< HEAD
            "scope": 2699,
=======
            "scope": 2785,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
            "src": "1446:183:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 2685,
=======
              "id": 2771,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "StructuredDocumentation",
              "src": "1635:294:14",
              "text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
            },
            "functionSelector": "7ecebe00",
<<<<<<< HEAD
            "id": 2692,
=======
            "id": 2778,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "1943:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2688,
=======
              "id": 2774,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2687,
=======
                  "id": 2773,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1958:5:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2692,
=======
                  "scope": 2778,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1950:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2686,
=======
                    "id": 2772,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1949:15:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 2691,
=======
              "id": 2777,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2690,
=======
                  "id": 2776,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2692,
=======
                  "scope": 2778,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "1988:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2689,
=======
                    "id": 2775,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1987:9:14"
            },
<<<<<<< HEAD
            "scope": 2699,
=======
            "scope": 2785,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
            "src": "1934:63:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 2693,
=======
              "id": 2779,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "StructuredDocumentation",
              "src": "2003:128:14",
              "text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
            },
            "functionSelector": "3644e515",
<<<<<<< HEAD
            "id": 2698,
=======
            "id": 2784,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "2198:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2694,
=======
              "id": 2780,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2214:2:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 2697,
=======
              "id": 2783,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2696,
=======
                  "id": 2782,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 2698,
=======
                  "scope": 2784,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                  "src": "2240:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2695,
=======
                    "id": 2781,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:9:14"
            },
<<<<<<< HEAD
            "scope": 2699,
=======
            "scope": 2785,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
            "src": "2189:60:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 2700,
=======
        "scope": 2786,
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
        "src": "620:1631:14",
        "usedErrors": []
      }
    ],
    "src": "114:2138:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
<<<<<<< HEAD
  "updatedAt": "2022-12-10T12:49:41.867Z",
=======
  "updatedAt": "2022-12-10T10:14:01.126Z",
>>>>>>> 79f555d7680cba7855616add98eb22090a1e6f4b
  "devdoc": {
    "details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
      },
      "nonces(address)": {
        "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}